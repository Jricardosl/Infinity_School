# Exemplos:

# soma = 0
# numero = 1
# while numero <= 10:
#     soma += numero
#     numero += 1
# print("A soma dos n√∫meros de 1 a 10 √©:",soma)

# senha = ""
# while senha != "1234":
#     senha = input("Digite a senha: ")
# print("Senha correta")

# Atividade 01:
# Contagem de 1 a 10:
# Crie um programa que use um la√ßo while para contar de 1 a 10 e exibir cada n√∫mero.

# contador = 1
# while contador <=10:
#    print(contador)
#    contador +=1

# Atividade 02:
# Soma de n√∫meros de 1 a 100:
# Escreva um programa que use um la√ßo while para somar os n√∫meros de 01 a 100 e exiba o resultado.

# soma = 0
# numero = 1
# while numero <= 100:
#     soma += numero
#     numero += 1
# print("A soma dos n√∫meros de 1 a 100 √©:",soma)

#Atividade 03:
#Tabuada de um n√∫mero:
# Fa√ßa um programa que solicite um n√∫mero ao usu√°rio e use um la√ßo
# while para exibir a tabuada desse n√∫mero (de 01 a 10).

# numero = int(input("Digite um n√∫mero para ver a tabuada: "))
# contador = 1
# print(f"Segue a tabuada de {numero}:\n")
# while contador <= 10:
#     resultado = numero * contador
#     print(f"{numero} x {contador} = {resultado}")
#     contador += 1

# Atividade 04:
# Contagem Regressiva:
# Desenvolva um programa que use um la√ßo while para exibir
# um contagem regressiva de 10 at√© 1 e, em seguinda, exiba "Feliz Ano Novo".

# contador = 10
# print("Contagem regressive em ... ")

# while contador >= 1:
#     print(contador)
#     contador -= 1
    
# print("Feliz Ano Novo")

# Um implemento no programa de contagem:
# Um programa de contagem regressiva que:
# Conta de 1 em 1 (voc√™ pode mudar o passo)
# D√° uma pausa de 1 segundo entre os n√∫meros
# No final mostra ‚ÄúFeliz Ano Novo!‚Äù colorido
# E toca um som simples (no Windows)

# import time #para usar time.sleep(1) e pausar 1 segundo.

# try:
#     import winsound  # S√≥ funciona no Windows, toca um beep no Windows.
#     som_disponivel = True
# except ImportError:
#     som_disponivel = False

# contador = 10
# passo = 1  # Pode mudar para 2, 3, 5 etc. Obs: controla de quanto em quanto a contagem diminui.

# print("\033[1;33mContagem regressiva...\033[m\n")  # Texto amarelo com ANSI escape Obs: comandos para deixar o texto colorido no terminal.

# while contador >= 1:
#     print(contador)
#     if som_disponivel:
#         winsound.Beep(1000, 300)  # Frequ√™ncia 1000Hz, dura√ß√£o 300ms Obs: Se o m√≥dulo n√£o estiver dispon√≠vel (exemplo: Linux/macOS), o som ser√° ignorado.


#     time.sleep(1)  # Pausa de 1 segundo
#     contador -= passo

# print("\033[1;32mFeliz Ano Novo! üéÜüéâ\033[m")  # Texto verde
# if som_disponivel:
#     for i in range(3):
#         winsound.Beep(1500, 500)
#         time.sleep(0.2)

#Exemplo: Vefica√ß√£o de Senha

# senha = ""
# while senha != "12345":
#     senha = input("Digite a senha: ")
#     if senha == "12345":
#         print("Acesso condedido")
#     else:
#         print("Senha incorreta, tente novamente")

#Exemplo: Menu interativo

# opcao = ""
# while opcao != "sair":
#     print("Menu:")
#     print("1. Op√ß√£o 1")
#     print("2. Op√ß√£o 2")
#     print("Digite 'sair' para encerrar")
#     opcao = input("Escolha uma op√ß√£o: ")
#     if opcao == "1":
#         print("Voc√™ escolheu a Op√ß√£o 1.")
#     elif opcao == "2":
#         print("Voc√™ escolheu a Op√ß√£o 2.")
#     elif opcao == "sair":
#         print("Encerrando o programa.")
#     else:
#         print("Op√ß√£o inv√°lida, tente novamente.")
    
#Atividade 05:
# Contagem at√© o n√∫mero inserido:
#     Crie um programa que solicite um n√∫mero ao usu√°rio e Use
#     um la√ßo while para contar de 1 at√© o n√∫mero inserido
#     exibindo apenas os n√∫meros impares.

# num = int(input ("Digite um n√∫mero: ")) # Solicita ao usu√°rio um n√∫mero e converte para inteiro com int()
# contador = 1
# print ("N√∫meros √≠mpares de 1 at√©", num,":")
# while contador <= num:
#     if contador % 2 !=0:
#         print (contador)
#     contador +=1


# Atividade 06:
# Soma de n√∫meros positivos:
#     Escreva um programa que solicite n√∫meros ao usu√°rio at√©
#     que ele digite um n√∫mero negativo, somando apenas os n√∫meros positivos inseridos.

# soma = 0
# while True:
#     numero = int(input ("Digite um n√∫mero (negativo para sair): "))
#     if numero < 0:
#         break
#     soma += numero
# print("A soma dos n√∫meros positivos √©:", soma)

#Mostrando os n√∫meros digitados
# soma = 0
# numeros_digitados = []

# while True:
#     numero = int(input("Digite um n√∫mero (negativo para sair): "))
    
#     if numero < 0:
#         break

#     soma += numero
#     numeros_digitados.append(numero)

# print("\nN√∫meros positivos digitados:", numeros_digitados)
# print("Soma dos n√∫meros positivos:", soma)

#Atidade 07:
# Tabuada com condicional:
#     Fa√ßa um programa que solicite um n√∫mero ao usu√°rio e Use
#     um la√ßo while para exibir a tabuada desse n√∫mero (de 1 a 10),
#     mas apenas para os resultados que forem m√∫ltiplos de 3.

# numero = int(input("Digite um n√∫mero para ver a tabuada (somente m√∫ltiplos de 3): "))
# contador = 1
# print(f"\nSegue a tabuada de {numero} (m√∫ltiplos de 3):\n")
# while contador <= 10:
#     resultado = numero * contador
#     if resultado % 3 == 0: # Verifica se o resultado √© m√∫ltiplo de 3 (ou seja, se o resto da divis√£o por 3 √© 0).
#        print(f"{numero} x {contador} = {resultado}")
#     contador += 1


# Atividade 08:
# M√©dia de notas:
#     Desenvolva um programa que solicite as notas dos alunos at√©
#     que o usu√°rio digite -1. Calcule e exiba a m√©dia das notas inseridas.

# soma = 0 #somar√° as notas.
# quantidade =0 #contar√° quantas notas foram inseridas.
# while True:
#     nota = float(input ("Digite a nota do aluno (-1 para encerrar): "))
#     if nota == -1:
#         break
#     soma += nota
#     quantidade +=1

# if quantidade > 0:
#     media = soma / quantidade
#     print (f"\nM√©dia das notas: {media:.2f}")
# else:
#     print("\nNenhuma nota foi inserida")

#Exemplo: Jogo de adininha√ß√£o

# numero_secreto = 7
# palpite = None

# while palpite != numero_secreto:
#     palpite = int(input("Adivinhe o n√∫mero secreto (entre 1 e 10): "))   
#     if palpite == numero_secreto:
#         print("Parab√©ns! Voc√™ acertou.")
#         break
#     else:
#         print ("Errado, tente novamente.")

#Extra:
#Jogo de adivinha√ß√£o aleat√≥rio    
# import random

# numero_secreto = random.randint(1, 10)  # n√∫mero aleat√≥rio entre 1 e 10
# tentativas_restantes = 3  # limite de tentativas

# print("üéØ Jogo de Adivinha√ß√£o")
# print("Voc√™ tem 3 tentativas para adivinhar o n√∫mero secreto entre 1 e 10.\n")

# while tentativas_restantes > 0:
#     try:
#         palpite = int(input("Digite seu palpite: "))
#     except ValueError:
#         print("‚õî Por favor, digite um n√∫mero v√°lido.")
#         continue

#     if palpite == numero_secreto:
#         print("üéâ Parab√©ns! Voc√™ acertou o n√∫mero secreto!")
#         break
#     else:
#         tentativas_restantes -= 1
#         if palpite < numero_secreto:
#             print("üîº O n√∫mero secreto √© **maior**.")
#         else:
#             print("üîΩ O n√∫mero secreto √© **menor**.")
        
#         if tentativas_restantes > 0:
#             print(f"‚ùó Voc√™ ainda tem {tentativas_restantes} tentativa(s).\n")
#         else:
#             print(f"üí• Fim de jogo! O n√∫mero secreto era {numero_secreto}.")


# Atividade 09:
# Contagem at√© 10:
# Crie um programa que use um la√ßo while para contar de 1 a 10 
# e termine quando atigir 10.          

# contador = 1 #Inicializa o contador com 1.
# while contador <=10: #Executa o bloco de c√≥digo enquanto o valor do contador for menor ou igual a 10.
#     print(contador) #Mostra o valor atual do contador.
#     contador +=1 #Incrementa o contador em 1 a cada repeti√ß√£o.
# print("Fim da contagem!")


# Atividade 10:
# Soma at√© 50:
# Escreva um programa que use um la√ßo while para somar 
# n√∫meros consecutivos come√ßando de 1 e termine quando
# a soma atingir ou ultrapassar 50.

# soma = 0
# numero = 1
# while soma < 50: #Assim que soma atingir ou ultrapassar 50, o la√ßo termina.
#      soma += numero
#      numero += 1 #Isso faz com que o pr√≥ximo n√∫mero a ser somado seja o pr√≥ximo consecutivo (2, 3, 4...).
# print("A soma acumulada √©:", soma)
# print("√öltimo n√∫mero somado foi:", numero - 1)

#Atividade 11:
#Entrada V√°lida:
#Crie um programa que solicite ao usu√°rio um n√∫mero entre 1 e 10.
#Continue pedido at√© o usu√°rio forne√ßa um valor v√°lido.

# numero = int(input("Digite um n√∫mero entre 1 e 10: "))
# while numero < 1 or numero > 10: #Enquanto o n√∫mero n√£o estiver entre 1 e 10, o la√ßo continua. uso do or (ou), indicando duas condi√ß√µes
#     print("N√∫mero inv√°lido! Tente novamente.")
#     numero = int(input("Digite um n√∫mero entre 1 e 10: "))

# print("Entrada v√°lida:", numero)

#Atividade 12:
#Senha correta:
#Desenvolva um programa que pe√ßa ao usu√°rio para digitar uma senha e continue pedindo at√© que 
#a senha correta(previamente definida) seja inserida.

# senha = ""
# senha = input("Digite a senha: ")
# while senha != "1234":
#     print("Senha incorreta, tente novamente!")
#     senha = input("Digite a senha: ")
# print("Senha correta")

#DESAFIOS PR√ÅTICOS

#PAGINA 27
#1-Soma de n√∫meros pares:
#Crie um programa que use um la√ßo while para somar todos os n√∫meros pares de 1 a 100 e exiba o resultado.

# soma = 0
# numero = 1
# while numero <= 100:
#     if numero % 2 == 0:
#         soma += numero
#     numero += 1
# print("A soma dos n√∫meros pares entre 1 a 100 √©:",soma)

#Outra forma
# soma = 0
# numero = 2
# while numero <= 100:
#     soma += numero
#     numero += 2
# print("A soma dos n√∫meros pares entre 1 a 100 √©:", soma)

#2 - N√∫meros √çmpares de 1 a 50:
#Escreva um programa que use um la√ßo while
#para exibir todos os n√∫meros √≠mpares de 1 a 50.

# numero = 1
# print("Os n√∫meros √≠mpares de 1 a 50 s√£o:") #Aparece uma vez s√≥, fora do la√ßo (while)
# while numero <= 50:
#       if numero % 2 != 0:
#         print (numero) #mostra apenas os √≠mpares.
#       numero += 1 # √© essencial para evitar um loop infinito.
      

#3 - Sequ√™ncia de Fibonacci:
# Fa√ßa um programa que use um la√ßo while para exibir os
# primeiros 20 termos da sequ√™ncia de Fibonacci.

#A sequ√™ncia de Fibonacci √© uma s√©rie de n√∫meros em que cada n√∫mero 
#√© a soma dos dois anteriores, come√ßando normalmente com 0 e 1.

# Exibir os primeiros 20 termos da sequ√™ncia de Fibonacci

# In√≠cio da sequ√™ncia: primeiro termo √© 0, segundo √© 1
# termo1 = 0 
# termo2 = 1
# contador = 0 # Contador para controlar quantos termos j√° foram mostrados

# print("Sequ√™ncia de Fibonacci (20 primeiros termos):")

# while contador < 20: # Enquanto o contador for menor que 20, o la√ßo continua
#     print(termo1)  # Mostra o termo atual da sequ√™ncia
#     proximo = termo1 + termo2
#     termo1 = termo2
#     termo2 = proximo
#     contador += 1


# ‚ùì O que √© fatorial?
# O fatorial de um n√∫mero inteiro positivo n (escrito como n!) √© o produto de todos os n√∫meros inteiros positivos de 1 at√© n.

# ‚úÖ Exemplos:
# 5! = 5 √ó 4 √ó 3 √ó 2 √ó 1 = 120

# 4! = 4 √ó 3 √ó 2 √ó 1 = 24

# 1! = 1

# 0! = 1 (por defini√ß√£o matem√°tica)

# 4 - Fatorial de um N√∫mero:
# Desenvolva um programa que solicite um n√∫mero ao usu√°rio
# e use um la√ßo while para calcular o fatorial desse n√∫mero.

# numero = int(input ("Digite um n√∫mero para calcular o fatorial: "))

# fatorial = 1 # Inicializa o resultado do fatorial com 1 (neutro da multiplica√ß√£o)

# contador = numero # Vari√°vel auxiliar para o la√ßo

# # Enquanto o contador for maior que 1, multiplica e decrementa
# while contador > 1: 
#     fatorial *= contador
#     contador -= 1
    
# print(f"O fatorial de {numero} √© {fatorial}")

# # 5 - N√∫meros Pares em um Intervalo:
# Crie um programa que solicite dois n√∫meros ao usu√°rio,
# representando um intervalo. Use um la√ßo while para exibir
# todos os n√∫meros pares dentro desse intervalo.

# Solicita os dois n√∫meros do intervalo
# numero1 = int(input("Digite o primeiro n√∫mero: "))
# numero2 = int(input("Digite o segundo n√∫mero: "))

# # Garante que vamos contar do menor para o maior, garantem que o intervalo funcione mesmo se o usu√°rio digitar primeiro o n√∫mero maior.
# inicio = min(numero1, numero2)
# fim = max(numero1, numero2)

# print(f"Os n√∫meros pares do intervalo entre {inicio} e {fim} s√£o:")

# # Inicializa o contador
# contador = inicio

# # La√ßo while para percorrer o intervalo
# while contador <= fim:
#     if contador % 2 == 0:
#         print(contador)
#     contador += 1

#6 - Contagem Regressiva com Verifica√ß√£o:
# Fa√ßa um programa que use um la√ßo while para fazer uma
# contagem regressiva de um n√∫mero inserido pelo usu√°rio at√© 0.
# Durante a contagem, exiba "N√∫mero par" para os n√∫meros
# pares.

# numero = int(input("Digite um n√∫mero para iniciar a contagem regressiva: "))
# contador = numero
# print(f"Contagem regressiva a partir de {numero}:")
# while contador >=0: # Enquanto o contador for maior ou igual a 0
#     print (contador, end="")  # Exibe o n√∫mero, evita a quebra de linha
#     if contador %2 ==0: # Verifica se √© par
#         print(" - N√∫mero par")
#     else:
#         print()  # S√≥ pula linha se n√£o for par
#     contador -=1

# 7- Soma de D√≠gitos:
# Escreva um programa que solicite um n√∫mero ao usu√°rio e use
# um la√ßo while para somar os d√≠gitos do n√∫mero at√© que a soma
# seja um √∫nico d√≠gito.

# Solicita um n√∫mero ao usu√°rio

# numero = int(input("Digite um n√∫mero: "))

# Continua o processo enquanto o n√∫mero tiver dois ou mais d√≠gitos
# while numero >= 10: #ou seja, tenha s√≥ 1 d√≠gito entre 0 e 9
#     soma = 0
#     # Soma os d√≠gitos um a um
#     while numero > 0:
#         digito = numero % 10     # Pega o √∫ltimo d√≠gito 
#         soma += digito           # Adiciona √† soma
#         numero = numero // 10    # Remove o √∫ltimo d√≠gito

#     # Atualiza o n√∫mero com a nova soma
#     numero = soma

# Exibe o resultado final (n√∫mero com um s√≥ d√≠gito)
# print(f"A soma final dos d√≠gitos √©: {numero}")

#8 - Sequ√™ncia de Collatz:
# Crie um programa que solicite um n√∫mero ao usu√°rio e use um
# la√ßo while para gerar e exibir a sequ√™ncia de Collatz at√© chegar
# ao n√∫mero 1.

# Solicita o n√∫mero inicial
# numero = int(input("Digite um n√∫mero inteiro positivo: "))

# # Garante que o n√∫mero seja positivo
# if numero <= 0:
#     print("Por favor, digite um n√∫mero inteiro positivo.")
# else:
#     print("Sequ√™ncia de Collatz:")
#     while numero != 1:
#         print(numero, end=" ‚Üí ")
#         if numero % 2 == 0:
#             numero = numero // 2
#         else:
#             numero = 3 * numero + 1
#     print(1)  # Por fim, imprime o n√∫mero 1




# 9- Adivinhar N√∫mero:
# Desenvolva um jogo de adivinha√ß√£o onde o
# programa escolhe um n√∫mero aleat√≥rio entre 1 e
# 100. O usu√°rio deve tentar adivinhar o n√∫mero, e
# o programa deve fornecer dicas se o palpite est√°
# muito alto ou baixo.

# Extra:
#Jogo de adivinha√ß√£o aleat√≥rio    
import random

numero_secreto = random.randint(1, 100)  # n√∫mero aleat√≥rio entre 1 e 100
tentativas_restantes = 3  # limite de tentativas

print("üéØ Jogo de Adivinha√ß√£o")
print("Voc√™ tem 3 tentativas para adivinhar o n√∫mero secreto entre 1 e 100.\n")

while tentativas_restantes > 0:
    try:
        palpite = int(input("Digite seu palpite: "))
    except ValueError:
        print("‚õî Por favor, digite um n√∫mero v√°lido.")
        continue

    if palpite == numero_secreto:
        print("üéâ Parab√©ns! Voc√™ acertou o n√∫mero secreto!")
        break
    else:
        tentativas_restantes -= 1
        if palpite < numero_secreto:
            print("üîº O n√∫mero secreto √© **maior**.")
        else:
            print("üîΩ O n√∫mero secreto √© **menor**.")
        
        if tentativas_restantes > 0:
            print(f"‚ùó Voc√™ ainda tem {tentativas_restantes} tentativa(s).\n")
        else:
            print(f"üí• Fim de jogo! O n√∫mero secreto era {numero_secreto}.")